package com.citiustech.mrr.mrrmultiinstance;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class MainProcessBO implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("isException")
	private java.lang.Boolean isException;
	@org.kie.api.definition.type.Label("exceptionMsg")
	private java.lang.String exceptionMsg;
	@org.kie.api.definition.type.Label("businessRuleName")
	private java.lang.String businessRuleName;
	@org.kie.api.definition.type.Label("isBRFails")
	private java.lang.Boolean isBRFails;
	@org.kie.api.definition.type.Label("listOfProviders")
	private java.util.List<java.lang.String> listOfProviders;
	@org.kie.api.definition.type.Label("listOfAdmin")
	private java.util.List<java.lang.String> listOfAdmin;
	@org.kie.api.definition.type.Label("noOfProviders")
	private int noOfProviders;
	@org.kie.api.definition.type.Label("charts")
	private java.util.List<java.lang.String> charts;
	@org.kie.api.definition.type.Label("abstracterUser")
	private java.lang.String abstracterUser;
	@org.kie.api.definition.type.Label("chartRejectByAbstracter")
	private java.lang.Boolean chartRejectByAbstracter;
	@org.kie.api.definition.type.Label("listOfOverread")
	private java.util.List<java.lang.String> listOfOverread;
	@org.kie.api.definition.type.Label("BICDecision")
	private java.lang.String BICDecision;
	@org.kie.api.definition.type.Label("finalDecision")
	private java.lang.String finalDecision;

	@org.kie.api.definition.type.Label("chartRejectByOverread")
	private java.lang.Boolean chartRejectByOverread;

	@org.kie.api.definition.type.Label("noOfOverread")
	private int noOfOverread;

	@org.kie.api.definition.type.Label(value = "zipCode")
	private int zipCode;

	@org.kie.api.definition.type.Label(value = "measure")
	private java.lang.String measure;

	@org.kie.api.definition.type.Label(value = "provider")
	private java.lang.String provider;

	@org.kie.api.definition.type.Label(value = "lastUser")
	private java.lang.String lastUser;

	@org.kie.api.definition.type.Label(value = "user")
	private java.lang.String user;

	@org.kie.api.definition.type.Label(value = "status")
	private java.lang.String status;

	public MainProcessBO() {
	}

	public java.lang.Boolean getIsException() {
		return this.isException;
	}

	public void setIsException(java.lang.Boolean isException) {
		this.isException = isException;
	}

	public java.lang.String getExceptionMsg() {
		return this.exceptionMsg;
	}

	public void setExceptionMsg(java.lang.String exceptionMsg) {
		this.exceptionMsg = exceptionMsg;
	}

	public java.lang.String getBusinessRuleName() {
		return this.businessRuleName;
	}

	public void setBusinessRuleName(java.lang.String businessRuleName) {
		this.businessRuleName = businessRuleName;
	}

	public java.lang.Boolean getIsBRFails() {
		return this.isBRFails;
	}

	public void setIsBRFails(java.lang.Boolean isBRFails) {
		this.isBRFails = isBRFails;
	}

	public java.util.List<java.lang.String> getListOfProviders() {
		return this.listOfProviders;
	}

	public void setListOfProviders(
			java.util.List<java.lang.String> listOfProviders) {
		this.listOfProviders = listOfProviders;
	}

	public java.util.List<java.lang.String> getListOfAdmin() {
		return this.listOfAdmin;
	}

	public void setListOfAdmin(java.util.List<java.lang.String> listOfAdmin) {
		this.listOfAdmin = listOfAdmin;
	}

	public int getNoOfProviders() {
		return this.noOfProviders;
	}

	public void setNoOfProviders(int noOfProviders) {
		this.noOfProviders = noOfProviders;
	}

	public java.util.List<java.lang.String> getCharts() {
		return this.charts;
	}

	public void setCharts(java.util.List<java.lang.String> charts) {
		this.charts = charts;
	}

	public java.lang.String getAbstracterUser() {
		return this.abstracterUser;
	}

	public void setAbstracterUser(java.lang.String abstracterUser) {
		this.abstracterUser = abstracterUser;
	}

	public java.lang.Boolean getChartRejectByAbstracter() {
		return this.chartRejectByAbstracter;
	}

	public void setChartRejectByAbstracter(
			java.lang.Boolean chartRejectByAbstracter) {
		this.chartRejectByAbstracter = chartRejectByAbstracter;
	}

	public java.util.List<java.lang.String> getListOfOverread() {
		return this.listOfOverread;
	}

	public void setListOfOverread(
			java.util.List<java.lang.String> listOfOverread) {
		this.listOfOverread = listOfOverread;
	}

	public java.lang.String getBICDecision() {
		return this.BICDecision;
	}

	public void setBICDecision(java.lang.String BICDecision) {
		this.BICDecision = BICDecision;
	}

	public java.lang.String getFinalDecision() {
		return this.finalDecision;
	}

	public void setFinalDecision(java.lang.String finalDecision) {
		this.finalDecision = finalDecision;
	}

	public java.lang.Boolean getChartRejectByOverread() {
		return this.chartRejectByOverread;
	}

	public void setChartRejectByOverread(java.lang.Boolean chartRejectByOverread) {
		this.chartRejectByOverread = chartRejectByOverread;
	}

	public int getNoOfOverread() {
		return this.noOfOverread;
	}

	public void setNoOfOverread(int noOfOverread) {
		this.noOfOverread = noOfOverread;
	}

	public int getZipCode() {
		return this.zipCode;
	}

	public void setZipCode(int zipCode) {
		this.zipCode = zipCode;
	}

	public java.lang.String getMeasure() {
		return this.measure;
	}

	public void setMeasure(java.lang.String measure) {
		this.measure = measure;
	}

	public java.lang.String getProvider() {
		return this.provider;
	}

	public void setProvider(java.lang.String provider) {
		this.provider = provider;
	}

	public java.lang.String getLastUser() {
		return this.lastUser;
	}

	public void setLastUser(java.lang.String lastUser) {
		this.lastUser = lastUser;
	}

	public java.lang.String getUser() {
		return this.user;
	}

	public void setUser(java.lang.String user) {
		this.user = user;
	}

	public java.lang.String getStatus() {
		return this.status;
	}

	public void setStatus(java.lang.String status) {
		this.status = status;
	}

	public MainProcessBO(java.lang.Boolean isException,
			java.lang.String exceptionMsg, java.lang.String businessRuleName,
			java.lang.Boolean isBRFails,
			java.util.List<java.lang.String> listOfProviders,
			java.util.List<java.lang.String> listOfAdmin, int noOfProviders,
			java.util.List<java.lang.String> charts,
			java.lang.String abstracterUser,
			java.lang.Boolean chartRejectByAbstracter,
			java.util.List<java.lang.String> listOfOverread,
			java.lang.String BICDecision, java.lang.String finalDecision,
			java.lang.Boolean chartRejectByOverread, int noOfOverread,
			int zipCode, java.lang.String measure, java.lang.String provider,
			java.lang.String lastUser, java.lang.String user,
			java.lang.String status) {
		this.isException = isException;
		this.exceptionMsg = exceptionMsg;
		this.businessRuleName = businessRuleName;
		this.isBRFails = isBRFails;
		this.listOfProviders = listOfProviders;
		this.listOfAdmin = listOfAdmin;
		this.noOfProviders = noOfProviders;
		this.charts = charts;
		this.abstracterUser = abstracterUser;
		this.chartRejectByAbstracter = chartRejectByAbstracter;
		this.listOfOverread = listOfOverread;
		this.BICDecision = BICDecision;
		this.finalDecision = finalDecision;
		this.chartRejectByOverread = chartRejectByOverread;
		this.noOfOverread = noOfOverread;
		this.zipCode = zipCode;
		this.measure = measure;
		this.provider = provider;
		this.lastUser = lastUser;
		this.user = user;
		this.status = status;
	}

}